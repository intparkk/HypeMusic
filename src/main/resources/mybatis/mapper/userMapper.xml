<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.springboot.dao.UserDAO">
	
	<!-- 회원가입 -->
	<insert id="joinUser" parameterType="UserDTO">
		INSERT INTO
			users (
				user_id,
				name,
				id,
				pw,
				email,
				profile_img,
				rank,
				join_date
			)
		VALUES (
			seq_user_id.nextval,
			#{name},
			#{id},
			#{pw},
			#{email},
			'/public/user_profile.png',
			'normal',
			sysdate
		)
	</insert>

	<!-- id 중복체크 -->	
	<select id="idDupCheck" parameterType="UserDTO" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
			USERS
		WHERE
			id = #{id}
	</select>
	
	<!-- email 중복체크 -->
	<select id="emailDupCheck" parameterType="UserDTO" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
			USERS
		WHERE
			email = #{email}
	</select>
	
	<!-- 로그인 (id와 pw가 모두 일치하는 행 count하여 int로 반환)-->
	<select id="loginCheck" parameterType="UserDTO" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
			users
		WHERE
			id = #{id} AND pw = #{pw}
	</select>

	<!-- 비밀번호 찾기 (id와 email이 모두 일치하는 행 count하여 int로 반환)-->
	<select id="findPwById" parameterType="UserDTO" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
			users
		WHERE
			id = #{id} AND email = #{email}
	</select>
	<!-- 유저 정보 선택 -->

	<select id="selectUserInfo" parameterType="UserDTO" resultType="UserDTO">
		SELECT
			user_id,
			id,
			pw,
			name,
			email,
			profile_img,
			rank,
			join_date
		FROM
			users
		WHERE
			id = #{id} AND pw = #{pw}
	</select>
	
	<!-- 비밀번호 변경 - 비밀번호 체크 -->
	<select id="pwCheck" parameterType="UserDTO" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
			users
		WHERE
			id = #{id} AND pw = #{pw}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="UserDTO" >
		UPDATE
			users
		SET
			pw = #{pw}
		WHERE
			id = #{id}
	</update>
	
	<!-- 프로필 사진 업데이트 -->
	<update id="updateProfileImg" parameterType="UserDTO">
		UPDATE
			users
		SET
			profile_img = #{profile_img}
		WHERE
			id = #{id}
	</update>
	
	<!-- 아이디찾기 기능을 위해서 userlist를 조회하는 쿼리 -->
	<select id="userEmail" parameterType="UserDTO"
			resultType="UserDTO">
	 select * from users where email = #{email}
	
	</select>
	

	<!-- userlist를 모두 조회하는 쿼리 -->
	<select id="listDao" parameterType="UserDTO"
			resultType="UserDTO">
	select rownum as rnum, users.* from users order by user_id asc
	</select>

	<!--  박정수 : 이용권 구매 -->
	<select id="buyticket" parameterType="UserDTO">
	  UPDATE USERS
	  SET rank = 'ticket'
	  WHERE user_id = #{userId}
	  AND rank = 'normal'
	</select>
	
	<!--  박정수 : 이용권 해제 -->
	<select id="sellticket" parameterType="UserDTO">
	  UPDATE USERS
	  SET rank = 'normal'
	  WHERE user_id = #{userId}
	  AND rank = 'ticket'
	</select>
	
	<!--  박정수 : 구매,취소 유저정보 업데이트용 -->
	<select id="updateticket" parameterType="UserDTO">
		SELECT
			user_id,
			id,
			pw,
			name,
			email,
			profile_img,
			rank,
			join_date
		FROM
			users
		WHERE
			user_id = #{user_id}

	</select>
	
</mapper>







